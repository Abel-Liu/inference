name: Push docker image

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run'
        type: environment
        required: true

env:
  BASE_VERSION: v0.10.3

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
  actions: read     # for read job status

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

run-name: Push to [${{ inputs.environment }}] branch [${{ github.ref_name }}]

jobs:
  build:
    runs-on: [ 'ubuntu-latest' ]
    environment: ${{ inputs.environment }}

    strategy:
      matrix:
        python-version: [ "3.10" ]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Configure AWS Credentials
        id: configure-aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: cn-north-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: get caller identity2
        run: |
          aws sts get-caller-identity
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
  
      - run: | 
          echo "GIT_TAG=${{ env.BASE_VERSION }}_${{ github.run_number }}" >> $GITHUB_ENV

      - name: print
        run: |
          echo "GIT_TAG: ${{ env.GIT_TAG }}"

      - name: Build and push Docker image
        shell: bash
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          PY_VERSION: ${{ matrix.python-version }}
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          
          docker build -t $REGISTRY/xprobe/xinference:$GIT_TAG --progress=plain -f xinference/deploy/docker/Dockerfile .
          docker push $REGISTRY/xprobe/xinference:$GIT_TAG
